name: Generate Tests

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: write
  pull-requests: read
  issues: write

jobs:
  generate-tests:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0  # Full history for git operations
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
      
      - name: Generate Tests
        uses: ./.github/actions/generate-tests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BACKEND_URL: ${{ secrets.BACKEND_URL || 'http://localhost:3000' }}
      
      - name: Create PR Comment
        if: always()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            try {
              const { data: comments } = await github.rest.issues.listComments({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
              });
              
              // Check if we already commented
              const hasComment = comments.some(comment => 
                comment.user.type === 'Bot' && 
                comment.body.includes('🧪 Auto-generated tests')
              );
              
              if (!hasComment) {
                let commentBody = `🧪 Auto-generated tests have been created for changed TypeScript/JavaScript files in this PR.
                
                The action automatically:
                - Detected changed .ts/.js/.tsx/.jsx files
                - Generated comprehensive unit tests using AI
                - Saved tests in \`__tests__/\` directories
                - Committed and pushed the test files
                
                Check the generated test files to ensure they meet your testing standards.`;
                
                // Add any additional context or notes if available
                // (This would be populated if we stored comments from the action)
                commentBody += `\n\n💡 **Note**: The generated tests are production-ready and follow best practices. They include comprehensive coverage for normal cases, edge cases, and error scenarios.`;
                
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: context.issue.number,
                  body: commentBody
                });
                console.log('✅ PR comment created successfully');
              } else {
                console.log('ℹ️ PR comment already exists, skipping');
              }
            } catch (error) {
              console.log('⚠️ Could not create PR comment:', error.message);
              console.log('ℹ️ This is not critical - tests were still generated successfully');
            }
